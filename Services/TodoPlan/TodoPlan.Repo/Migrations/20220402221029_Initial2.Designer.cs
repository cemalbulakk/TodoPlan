// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoPlan.Repo;

#nullable disable

namespace TodoPlan.Repo.Migrations
{
    [DbContext(typeof(TodoPlanContext))]
    [Migration("20220402221029_Initial2")]
    partial class Initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TodoPlan.Core.Models.BusinessTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EstimatedDuration")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BusinessTasks");
                });

            modelBuilder.Entity("TodoPlan.Core.Models.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WeeklyWorkingHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("TodoPlan.Core.Models.DeveloperBusinessTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BusinessTaskId")
                        .HasColumnType("int");

                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTaskId");

                    b.HasIndex("DeveloperId");

                    b.ToTable("DeveloperBusinessTasks");
                });

            modelBuilder.Entity("TodoPlan.Core.Models.DeveloperTodo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<string>("TodoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("TodoId");

                    b.ToTable("DeveloperTodos");
                });

            modelBuilder.Entity("TodoPlan.Core.Models.Todo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Sure")
                        .HasColumnType("int");

                    b.Property<int>("Zorluk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("TodoPlan.Core.Models.DeveloperBusinessTask", b =>
                {
                    b.HasOne("TodoPlan.Core.Models.BusinessTask", "BusinessTask")
                        .WithMany()
                        .HasForeignKey("BusinessTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoPlan.Core.Models.Developer", "Developer")
                        .WithMany("DeveloperBusinessTasks")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessTask");

                    b.Navigation("Developer");
                });

            modelBuilder.Entity("TodoPlan.Core.Models.DeveloperTodo", b =>
                {
                    b.HasOne("TodoPlan.Core.Models.Developer", "Developer")
                        .WithMany("DeveloperTodos")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoPlan.Core.Models.Todo", "Todo")
                        .WithMany()
                        .HasForeignKey("TodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");

                    b.Navigation("Todo");
                });

            modelBuilder.Entity("TodoPlan.Core.Models.Developer", b =>
                {
                    b.Navigation("DeveloperBusinessTasks");

                    b.Navigation("DeveloperTodos");
                });
#pragma warning restore 612, 618
        }
    }
}
